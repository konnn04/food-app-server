from food_app import create_app, db
from food_app.models.user import User
from food_app.models.customer import Customer
from food_app.models.restaurant import Restaurant
from food_app.models.food import Food
from food_app.models.category import Category
from datetime import datetime
import random

app = create_app()

def init_sample_data():
    with app.app_context():
        db.create_all()
        print("ƒê√£ t·∫°o l·∫°i schema database...")

        # Admin account
        if User.query.filter_by(username='admin').first() is None:
            admin = User(
                first_name='Qu·∫£n tr·ªã',
                last_name='Vi√™n',
                username='admin',
                phone='0123456789',
                email='admin@foodapp.com',
                gender='male',
                role='admin',
                user_type='staff'
            )
            admin.set_password('admin123')
            db.session.add(admin)
            print("‚úì ƒê√£ t·∫°o t√†i kho·∫£n admin")
        # Customers
        if Customer.query.filter_by(phone='0987654321').first() is None:
            customer = Customer(
                first_name='L√™ VƒÉn',
                last_name='Kh√°ch',
                phone='0987654321',  
                gender='male',
                address='456 L√™ VƒÉn S·ªπ, Q.3, TP.HCM',
                user_type='customer'
            )
            db.session.add(customer)
            print("‚úì ƒê√£ t·∫°o customer 1")

        if Customer.query.filter_by(phone='0987654322').first() is None:
            customer2 = Customer(
                first_name='Nguy·ªÖn Th·ªã',
                last_name='Hoa',
                phone='0987654322',  
                email='customer@example.com',
                gender='female',
                address='789 Nguy·ªÖn Hu·ªá, Q.1, TP.HCM',
                user_type='customer'
            )
            db.session.add(customer2)
            print("‚úì ƒê√£ t·∫°o customer 2")

        # Categories
        categories_to_create = [
            {'name': 'C∆°m T·∫•m', 'description': 'C√°c m√≥n c∆°m t·∫•m truy·ªÅn th·ªëng'},
            {'name': 'ƒê·∫∑c S·∫£n', 'description': 'C√°c m√≥n ƒë·∫∑c s·∫£n'},
            {'name': 'ƒê·ªì U·ªëng', 'description': 'C√°c lo·∫°i ƒë·ªì u·ªëng'},
            {'name': 'Ph·ªü', 'description': 'C√°c m√≥n ph·ªü'},
            {'name': 'B√∫n', 'description': 'C√°c m√≥n b√∫n'},
        ]
        for cat in categories_to_create:
            db.session.merge(Category(**cat))
        db.session.commit()

        categories = {c.name: c for c in Category.query.all()}

        # Generate > 20 restaurants around HCMC center with random coords
        center_lat, center_lon = 10.776889, 106.700806
        def jitter(max_km=15):
            # ~1 deg lat = 111km
            dlat = random.uniform(-max_km, max_km) / 111.0
            import math
            dlon = random.uniform(-max_km, max_km) / (111.0 * max(math.cos(math.radians(center_lat)), 0.01))
            return dlat, dlon

        vietnam_food_names = [
            'C∆°m T·∫•m S∆∞·ªùn', 'C∆°m T·∫•m B√¨ Ch·∫£', 'C∆°m G√† X·ªëi M·ª°', 'Ph·ªü B√≤', 'Ph·ªü G√†',
            'B√∫n B√≤ Hu·∫ø', 'B√∫n Ch·∫£ C√°', 'B√∫n Th·ªãt N∆∞·ªõng', 'H·ªß Ti·∫øu Nam Vang', 'B√°nh M√¨ Th·ªãt',
            'B√°nh X√®o', 'B√°nh Cu·ªën', 'G·ªèi Cu·ªën', 'Mi·∫øn G√†', 'Ch√°o S∆∞·ªùn'
        ]

        num_restaurants = 22
        for i in range(num_restaurants):
            owner = User(
                first_name='Owner', last_name=str(i+1), username=f'owner{i+1}',
                phone=f'090000{i:03d}', email=f'owner{i+1}@demo.com', gender='male', role='owner', user_type='staff'
            )
            owner.set_password('owner123')
            db.session.add(owner)
            db.session.flush()

            dlat, dlon = jitter()
            lat = center_lat + dlat
            lon = center_lon + dlon
            rest = Restaurant(
                name=f'Nh√† h√†ng {i+1}',
                address=f'{100+i} ƒê∆∞·ªùng Demo, Q.{(i%12)+1}, TP.HCM',
                phone=f'0283{i:07d}',
                email=f'rest{i+1}@demo.com',
                description='Nh√† h√†ng Vi·ªát Nam',
                owner_id=owner.id,
                tax_code=f'{1000000000+i}',
                approval_status='approved',
                opening_hours={'mon':'7:00-22:00','tue':'7:00-22:00','wed':'7:00-22:00','thu':'7:00-22:00','fri':'7:00-22:00','sat':'7:00-23:00','sun':'7:00-23:00'},
                latitude=lat,
                longitude=lon
            )
            db.session.add(rest)
            db.session.flush()

            # 5 foods per restaurant
            for j in range(5):
                name = random.choice(vietnam_food_names)
                price = random.choice([30000, 35000, 40000, 45000, 50000, 60000])
                food = Food(
                    name=f'{name} #{j+1}',
                    description=f'{name} h∆∞∆°ng v·ªã Vi·ªát',
                    price=price,
                    restaurant_id=rest.id,
                    available=True
                )
                db.session.add(food)

        db.session.commit()
        print(f"‚úì ƒê√£ t·∫°o {num_restaurants} nh√† h√†ng, m·ªói nh√† h√†ng 5 m√≥n ƒÉn")

        print('\nüéâ Kh·ªüi t·∫°o d·ªØ li·ªáu m·∫´u ho√†n t·∫•t!')

if __name__ == '__main__':
    init_sample_data()